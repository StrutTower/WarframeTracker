@model ItemModalViewModel
@{
    string missingImageUrl = Url.Content("~/images") + "/missingImage.jpg";
}

<button type="button" class="close" data-dismiss="modal" aria-label="Close">
    <span aria-hidden="true">&times;</span>
</button>

<h3 display-for="WarframeItem.Name" class="text-center"></h3>

<form action="@Url.Action("UpdateItemAcquisition", "Item")" method="post" id="item-acquisition-form" class="row">
    <div class="col-6">
        <img class="img-fluid mb-2" src="https://cdn.warframestat.us/img/@Model.WarframeItem.ImageName"
             onerror="this.onerror=null;this.src='@missingImageUrl';" style="max-height:100px;" />
        @Html.HiddenFor(x => x.ItemAcquisition.UserID)
        @Html.HiddenFor(x => x.ItemAcquisition.ItemUniqueName)
        @if (User.Identity.IsAuthenticated) {
            if (Model.ItemCategory.AllowAcquisition) {
                <div class="form-check">
                    <label>
                        <input twr-for="ItemAcquisition.IsAcquired" />
                        Acquired
                    </label>
                </div>
            }
            if (Model.ItemCategory.CanBeMastered) {
                <div class="form-check">
                    <label>
                        <input twr-for="ItemAcquisition.IsMastered" />
                        Mastered
                    </label>
                </div>
            }
            if (Model.ItemCategory.AllowAcquisition || Model.ItemCategory.CanBeMastered) {
                <button type="submit" class="btn btn-primary">Update</button>
            }
        } else {
            <p class="text-warning"><em>Log in to track your items.</em></p>
        }
    </div>

    <div class="col-6">
        <hr class="d-md-none" />
        @if (Model.ComponentAcquisitions != null && Model.ComponentAcquisitions.Any()) {
            <h6>Components</h6>
            for (int i = 0; i < Model.ComponentAcquisitions.Count; i++) {
                Component comp = Model.WarframeItem.Components.Where(x => x.UniqueName == Model.ComponentAcquisitions[i].ComponentUniqueName).FirstOrDefault();
                @Html.HiddenFor(x => x.ComponentAcquisitions[i].UserID)
                @Html.HiddenFor(x => x.ComponentAcquisitions[i].ComponentUniqueName)
                @Html.HiddenFor(x => x.ComponentAcquisitions[i].ItemUniqueName)

                <div class="media">
                    <div style="height:45px;width:55px;overflow:hidden;position:relative;">
                        <img class="mr-2" src="https://cdn.warframestat.us/img/@comp.ImageName"
                             style="position:absolute;max-height:55px;left:50%;transform:translateX(-50%)" />
                    </div>
                    <div class="media-body">
                        <span display-for="@comp.Name"></span>
                        @if (comp.ItemCount > 1) {
                            <span>x<span display-for="@comp.ItemCount"></span></span>
                        }

                        @if (Model.WarframeItem.IsPrime && User.Identity.IsAuthenticated) {
                            <div class="form-check">
                                <label>
                                    <input twr-for="ComponentAcquisitions[i].IsAcquired" />
                                    Acquired
                                </label>
                            </div>
                        }
                    </div>
                </div>
            }
        }
    </div>

    <hr class="col-12" />

    <div class="col-12">
        <p display-for="WarframeItem.Description"></p>

        @if (Model.WarframeItem.IsPrime && Model.WarframeItem.Components != null && Model.WarframeItem.Components.Any()) {
            <h5>Relics</h5>
            <div class="pl-2">
                @foreach (Component comp in Model.WarframeItem.Components) {
                    ComponentAcquisition ca = Model.ComponentAcquisitions.SingleOrDefault(x => x.ComponentUniqueName == comp.UniqueName);

                    if (ca != null && ca.IsAcquired) {
                        <div class="text-muted">
                            <span display-for="@comp.Name"></span>
                            <span class="mdi mdi-check"></span>
                        </div>
                    } else {
                        <div display-for="@comp.Name"></div>
                    }

                    <div class="pl-3 mb-2 small @(ca != null && ca.IsAcquired ? "text-muted" : "")">
                        @if (comp.Drops != null && comp.Drops.Any()) {
                            foreach (var group in comp.Drops.Where(x => x.RelicLevel == "Intact").GroupBy(x => x.RelicEra)) {
                                <div>
                                    <span display-for="@group.Key"></span>
                                    @string.Join(", ", group.Select(x => x.RelicType + " " + x.Rarity).Distinct())
                                </div>
                            }
                        } else {
                            @:No Non-Vaulted Relics
                        }
                    </div>
                }
            </div>
        }
    </div>
</form>
