@model EditInvasionRewardViewModel
@{
    bool editing = false;
    if (Model != null && Model.InvasionReward != null && Model.InvasionReward.ID != 0) {
        editing = true;
        ViewData["Title"] = "Edit Invasion Reward";
    } else {
        ViewData["Title"] = "New Invasion Reward";
    }
}

<h3>@ViewData["message"]</h3>

<form action="" method="post" class="row">
    @if (editing) {
        @Html.HiddenFor(x => x.InvasionReward.ID)
    }
    <div class="col-md-6">
        <div class="form-group">
            @if (editing) {
                @Html.HiddenFor(x => x.InvasionReward.UniqueName)
                @Html.DisplayFor(x => x.InvasionReward.UniqueName)
            } else {
                <label twr-for="InvasionReward.UniqueName"></label>
                <select asp-for="InvasionReward.UniqueName" asp-items="Model.UniqueNameSelectList" class="twr-input">
                    <option></option>
                </select>
                <help-text twr-for="InvasionReward.UniqueName"></help-text>
                <span asp-validation-for="InvasionReward.UniqueName"></span>
            }
        </div>

        <div class="form-group">
            <label twr-for="InvasionReward.Name"></label>
            <input twr-for="InvasionReward.Name" />
            <help-text twr-for="InvasionReward.Name"></help-text>
            <span asp-validation-for="InvasionReward.Name"></span>
        </div>

        <div class="form-group">
            <div class="form-check">
                <input twr-for="InvasionReward.ShowOnHomeView" />
                <label twr-for="InvasionReward.ShowOnHomeView"></label>
            </div>
            <help-text twr-for="InvasionReward.ShowOnHomeView"></help-text>
            <span asp-validation-for="InvasionReward.ShowOnHomeView"></span>
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
</form>