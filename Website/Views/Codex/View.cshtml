@model CodexViewModel
@{
    ViewData["Title"] = "Codex";
    string missingImageUrl = Url.Content("~/images") + "/missingImage.jpg";
}

<div class="row">
    <div class="col-md-6">
        <select class="form-control form-control-sm" id="codex-filter-dropdown">
            <option value="all">Show All Items</option>
            <option value="prime" data-show="True" data-hide="False">Prime</option>
            <option value="prime" data-show="False" data-hide="True">Non-Prime</option>
            <option value="acquired" data-show="True" data-hide="False">Acquired</option>
            <option value="acquired" data-show="False" data-hide="True">Not Acquired</option>
            <option value="mastered" data-show="True" data-hide="False">Mastered</option>
            <option value="mastered" data-show="False" data-hide="True">Not Mastered</option>
            <option value="vaulted" data-show="True" data-hide="False">Vaulted</option>
            <option value="vaulted" data-show="False" data-hide="True">Not Vaulted</option>
        </select>
    </div>
    <div class="col-md-6">
    </div>
</div>

@if (Model.CodexTabs != null && Model.CodexTabs.Any()) {
    <ul class="nav nav-tabs mb-2 justify-content-around" id="codex-tab-list" role="tablist"
        style="margin-left:-12px;margin-right:-12px;">
        @foreach (CodexTab tab in Model.CodexTabs) {
            <li class="nav-item" title="@tab.Name" data-toggle="tooltip">
                <a class="nav-link px-1 px-md-2 py-1 @(tab.ID == Model.CurrentCodexTab.ID ? "active" : "")"
                   href="@Url.Action("ViewTab", new { id = (int)Model.CodexSection, tab = tab.ID })">
                    <img src="~/images/@tab.ImageName" style="max-height:40px" />
                </a>
            </li>
        }
    </ul>

    <div>
        @if (Model.WarframeItems.Any()) {
            if (Model.CurrentCodexTab.GroupItemsByItemCategory) {
                foreach (ItemCategory category in Model.CurrentCodexTab.ItemCategory_Objects.OrderBy(x => x.SortingPriority).ThenBy(x => x.Name)) {
                    IEnumerable<WarframeItem> items = Model.WarframeItems.Where(x => x.ItemCategoryID == category.ID);
                    <h5 class="mt-3">@Html.DisplayFor(x => category.Name)</h5>
                    <div class="row gutter-5">
                        @foreach (WarframeItem item in items) {
                            ViewData["itemAcquisition"] = Model.ItemAcquisitions.SingleOrDefault(x => x.ItemUniqueName == item.UniqueName);
                            @if (Model.CurrentCodexTab.CodexSectionID == CodexSection.Mods) {
                                <partial name="_ModItem" for="@item" view-data="@ViewData" />
                            } else {
                                <partial name="_CodexItem" for="@item" view-data="@ViewData" />
                            }
                        }
                    </div>
                }
            } else {
                <div class="row gutter-5">
                    @foreach (WarframeItem item in Model.WarframeItems) {
                        ViewData["itemAcquisition"] = Model.ItemAcquisitions.SingleOrDefault(x => x.ItemUniqueName == item.UniqueName);
                        @if (Model.CurrentCodexTab.CodexSectionID == CodexSection.Mods) {
                            <partial name="_ModItem" for="@item" view-data="@ViewData" />
                        } else {
                            <partial name="_CodexItem" for="@item" view-data="@ViewData" />
                        }
                    }
                </div>
            }
        }
    </div>
} else {
    <h6 class="text-center">Nothing has been added to this page yet</h6>
}

<partial name="_ItemModal" />