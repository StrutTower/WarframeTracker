@model EditManualItemDataViewModel
@{
    bool editing = false;
    if (Model == null || Model.ManualItemData == null || Model.ManualItemData.ID == 0) {
        ViewBag.Title = "New Manual Item Data";
    } else {
        ViewBag.Title = "Edit Manual Item Data";
        editing = true;
    }
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area=""><span class="mdi mdi-home mdi-lg"></span></a></li>
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="Admin">Site Management</a></li>
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="ManualItemData" asp-area="Admin">Manage Manual Item Data</a></li>
    <li class="breadcrumb-item active"><span>@ViewData["Title"]</span></li>
</ol>

<h3>@ViewBag.Title</h3>
<hr />

<div asp-validation-summary="All" class="text-danger"></div>

<form action="" method="post" class="row">
    <div class="col-md-6">
        @if (editing) {
            @Html.HiddenFor(x => x.ManualItemData.ID)
        }

        <div class="form-group">
            <label asp-for="ManualItemData.ItemUniqueName"></label>
            <select class="form-control warframe-item-searcher" required data-val="true" data-val-required="An item is required"
                    name="@Html.NameFor(x => x.ManualItemData.ItemUniqueName)" id="@Html.IdFor(x => x.ManualItemData.ItemUniqueName)"
                    data-url="@Url.Action("WarframeItemsAjax", "Search", new { Area = "" })">
                <option></option>
                @if (!string.IsNullOrWhiteSpace(Model.ManualItemData.ItemUniqueName)) {
                    <option value="@Model.ManualItemData.ItemUniqueName" selected>@Model.SelectedItemName</option>
                }
            </select>
            <description asp-for="ManualItemData.ItemUniqueName"></description>
            <span asp-validation-for="ManualItemData.ItemUniqueName"></span>
        </div>

        @Html.FormGroupSelectListFor(x => x.ManualItemData.PropertyName, new SelectList(Model.PropertyNames), "")
        @Html.FormGroupEditorFor(x => x.ManualItemData.Value)

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
            <div class="form-check-inline">
                <label>
                    @Html.CheckBox("addAnother") Add Another Item
                </label>
            </div>
        </div>
    </div>
</form>
