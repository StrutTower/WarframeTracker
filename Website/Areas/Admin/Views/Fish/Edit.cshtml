@model EditFishViewModel
@{
    bool editing = false;
    @if (Model != null && Model.Fish != null && Model.Fish.ID != 0) {
        editing = true;
        ViewBag.Title = "Edit Fish";
    } else {
        ViewBag.Title = "New Fish";
    }
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area=""><span class="mdi mdi-home mdi-lg"></span></a></li>
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="Admin">Site Management</a></li>
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Fish" asp-area="Admin">Manage Fish</a></li>
    <li class="breadcrumb-item active"><span>@ViewData["Title"]</span></li>
</ol>

<h3>@ViewBag.Title</h3>
<hr />

<form action="" method="post" class="row">
    @if (editing) {
        @Html.HiddenFor(x => x.Fish.ID)
    }

    <div class="col-md-6">
        <div class="form-group">
            <label asp-for="Fish.UniqueName"></label>
            <select class="form-control warframe-item-searcher" required data-val="true" data-val-required="An item is required"
                    name="@Html.NameFor(x => x.Fish.UniqueName)" id="@Html.IdFor(x => x.Fish.UniqueName)"
                    data-url="@Url.Action("WarframeItemsAjax", "Search", new { area = "" })">
                <option></option>
                @if (Model.Fish != null && !string.IsNullOrWhiteSpace(Model.Fish.UniqueName)) {
                    <option value="@Model.Fish.UniqueName" selected>@Model.SelectedItemName</option>
                }
            </select>
            <description asp-for="Fish.UniqueName"></description>
            <span asp-validation-for="Fish.UniqueName"></span>
        </div>

        @Html.FormGroupSelectListFor(x => x.Fish.MapName, Model.MapSelectList, "")
        @Html.FormGroupSelectListFor(x => x.Fish.Biome, Model.BiomeSelectList, "")
        @Html.FormGroupSelectListFor(x => x.Fish.ActiveTime, Model.ActiveTimeSelectList, "")
        @Html.FormGroupEditorFor(x => x.Fish.SpearType)
        @Html.FormGroupSelectListFor(x => x.Fish.Rarity, Model.RaritySelectList, "")

        @Html.FormGroupEditorFor(x => x.Fish.MaxWeight)
        @Html.FormGroupEditorFor(x => x.Fish.BaitName)
        @Html.FormGroupEditorFor(x => x.Fish.SmallStanding)
        @Html.FormGroupEditorFor(x => x.Fish.MediumStanding)
        @Html.FormGroupEditorFor(x => x.Fish.LargeStanding)

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
</form>
