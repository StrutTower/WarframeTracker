@model EditItemCategoryViewModel
@{
    Boolean editing = false;
    if (Model != null && Model.ItemCategory != null && Model.ItemCategory.ID != 0) {
        ViewBag.Title = "Edit Item Category";
        editing = true;
    } else {
        ViewBag.Title = "New Item Category";
    }
}

<h3>@ViewBag.Title</h3>
<hr />

<div asp-validation-summary="All"></div>

<form action="" method="post" class="row">
    <div class="col-md-6">
        @if (editing) {
            @Html.HiddenFor(x => x.ItemCategory.ID)
        }

        @Html.FormGroupEditorFor(x => x.ItemCategory.Name)

        <div class="form-group">
            <label twr-for="ItemCategory.CodexTabID"></label>
            <select asp-for="ItemCategory.CodexTabID" asp-items="Model.CodexTabSelectList" class="twr-input">
                <option></option>
            </select>
            <help-text twr-for="ItemCategory.CodexTabID"></help-text>
            <span asp-validation-for="ItemCategory.CodexTabID"></span>
        </div>

        @Html.FormGroupEditorFor(x => x.ItemCategory.WarframeApiCategoryName)

        @Html.FormGroupEditorFor(x => x.ItemCategory.WarframeApiUniqueNameRegexFilter)

        @Html.FormGroupEditorFor(x => x.ItemCategory.AllowAcquisition)

        @Html.FormGroupEditorFor(x => x.ItemCategory.CanBeMastered)

        @Html.FormGroupEditorFor(x => x.ItemCategory.MaxRankExperience)

        @Html.FormGroupEditorFor(x => x.ItemCategory.ManuallyExcludedUniqueNames, null, "TextArea")

        @Html.FormGroupEditorFor(x => x.ItemCategory.SortingPriority)

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
</form>
