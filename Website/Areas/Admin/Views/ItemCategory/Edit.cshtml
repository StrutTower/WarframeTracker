@model EditItemCategoryViewModel
@{
    bool editing = false;
    if (Model != null && Model.ItemCategory != null && Model.ItemCategory.ID != 0) {
        ViewBag.Title = "Edit Item Category";
        editing = true;
    } else {
        ViewBag.Title = "New Item Category";
    }
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area=""><span class="mdi mdi-home mdi-lg"></span></a></li>
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="Admin">Site Management</a></li>
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="ItemCategory" asp-area="Admin">Manage Item Categories</a></li>
    <li class="breadcrumb-item active"><span>@ViewData["Title"]</span></li>
</ol>

<h3>@ViewBag.Title</h3>
<hr />

<div asp-validation-summary="All"></div>

<form action="" method="post" class="row">
    <div class="col-md-6">
        @if (editing) {
            @Html.HiddenFor(x => x.ItemCategory.ID)
        }

        @Html.FormGroupEditorFor(x => x.ItemCategory.Name)
        @Html.FormGroupSelectListFor(x => x.ItemCategory.CodexTabID, Model.CodexTabSelectList, "")
        @Html.FormGroupEditorFor(x => x.ItemCategory.WarframeApiCategoryName)
        @Html.FormGroupEditorFor(x => x.ItemCategory.WarframeApiProductCategoryName)
        @Html.FormGroupEditorFor(x => x.ItemCategory.WarframeApiUniqueNameRegexFilter)
        @Html.FormGroupEditorFor(x => x.ItemCategory.AllowAcquisition)
        @Html.FormGroupEditorFor(x => x.ItemCategory.CanBeMastered)
        @Html.FormGroupEditorFor(x => x.ItemCategory.MaxRankExperience)
        @Html.FormGroupEditorFor(x => x.ItemCategory.ManuallyExcludedUniqueNames, null, "TextArea")
        @Html.FormGroupEditorFor(x => x.ItemCategory.SortingPriority)

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
</form>
