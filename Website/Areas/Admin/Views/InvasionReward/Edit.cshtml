@model EditInvasionRewardViewModel
@{
    bool editing = false;
    if (Model != null && Model.InvasionReward != null && Model.InvasionReward.ID != 0) {
        editing = true;
        ViewData["Title"] = "Edit Invasion Reward";
    } else {
        ViewData["Title"] = "New Invasion Reward";
    }
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area=""><span class="mdi mdi-home mdi-lg"></span></a></li>
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="Admin">Site Management</a></li>
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="InvasionReward" asp-area="Admin">Manage Invasion Rewards</a></li>
    <li class="breadcrumb-item active"><span>@ViewData["Title"]</span></li>
</ol>

<h3>@ViewData["message"]</h3>
<hr />

<form action="" method="post" class="row">
    @if (editing) {
        @Html.HiddenFor(x => x.InvasionReward.ID)
    }
    <div class="col-md-6">
        <div class="form-group">
            @if (editing) {
                @Html.HiddenFor(x => x.InvasionReward.UniqueName)
                @Html.DisplayFor(x => x.InvasionReward.UniqueName)
            } else {
                @Html.FormGroupSelectListFor(x => x.InvasionReward.UniqueName, Model.UniqueNameSelectList, "")
            }
        </div>

        @Html.FormGroupEditorFor(x => x.InvasionReward.Name)
        @Html.FormGroupEditorFor(x => x.InvasionReward.ShowOnHomeView)

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
</form>